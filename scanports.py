## Simple port scanner. Sometimes a proxy can be used to bypass a firewall. 

import requests
import argparse

parser = argparse.ArgumentParser(description='Port scan through proxy')
parser.add_argument('httpproxy', type=str, help='host:port for proxy')
parser.add_argument('host', type=str, help='host to scan')
parser.add_argument('begin', type=int, help='Port scan lower range', default=1)
parser.add_argument('end', type=int, help='Port scan upper range', default=1000)

args = parser.parse_args()

proxies = {
  'http': args.httpproxy
}

URL = 'http://' + args.host

openports=set()

# How to detect connection refused? This might work for a squid proxy
REFUSED_DETECT = '(111) Connection refused'

for portto in range(args.begin, args.end):
    repla = requests.get(URL + ':' + str(portto), proxies=proxies)
    if (not (REFUSED_DETECT in repla.text)): 
      print('------ PORT : ' + str(portto))
      print(repla.text)
      openports.add(portto)
    if ((portto % 19) == 18):
      print("still working .. (port " + str(portto) + ")")
    
print("----------------")
print("SCAN COMPLETE")
print("----------------")
print("OPEN PORTS: ")
for portto in openports:
  print(portto)


